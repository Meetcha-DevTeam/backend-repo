name: CD with Gradle and Docker

on:
  push:
    branches:
      - 'dev'
      - 'main'
      - 'dev2' 
  pull_request:
    branches:
      - 'dev'
      - 'main'
      - 'dev2' 

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: ☕️ set up JDK 17        # 프로젝트의 java 버전에 맞추어 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: 👏🏻 grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🐘 build with Gradle (without test)
        run: ./gradlew clean build -x test --stacktrace

      - name: 🧪 check secret values (for debug only!)
        run: |
          echo "DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}"

      - name: 🔍 check tag
        run: echo "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}"

      - name: 🐳 Docker build & push
        run:  |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

      - name: 🚀 deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          envs: GITHUB_SHA
          script: |
            set -e

            echo "✋🏻 Stopping and removing existing container (if exists)"
            sudo docker rm -f meetcha || true

            echo "🐳 Current docker containers:"
            sudo docker ps -a

            echo "🥳 Pulling new image"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

            echo "🌱 Running new container with ENV"
            sudo docker run -d --name meetcha \
              -p 8000:8080 \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e SPRING_DATASOURCE_URL="${{ secrets.RDS_URL }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.RDS_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.RDS_PASSWORD }}" \
              -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              -e GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}" \
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

            echo "✅ Container status:"
            sudo docker ps -a

            echo "🚮 Cleaning up old images"
            sudo docker image prune -f
      




